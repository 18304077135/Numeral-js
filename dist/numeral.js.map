{"version":3,"sources":["../src/numeral.js"],"names":["numeral","_","VERSION","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","options","Numeral","input","number","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","locale","negP","signed","optDec","abbr","trillion","billion","million","thousand","abbrForce","abs","min","max","power","int","precision","thousands","decimal","neg","Math","includes","slice","RegExp","abbreviations","toString","split","indexOf","toFixed","delimiters","string","stringOriginal","abbreviation","i","currency","symbol","pow","search","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","prototype","call","accum","next","mn","maxDecimals","optionals","splitValue","minDecimals","boundedPrecision","optionalsRegExp","output","key","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","cback","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","module","exports","ender","define","amd"],"mappings":";;AAAA;;;;;;;;AAQA,CAAC,YAAW;AACR;;;;AAIA,QAAIA,QAAJ;AAAA,QACIC,CADJ;AAAA,QAEIC,UAAU,OAFd;AAAA,QAGIC,UAAU,EAHd;AAAA,QAIIC,UAAU,EAJd;AAAA,QAKIC,WAAW;AACPC,uBAAe,IADR;AAEPC,oBAAY,IAFL;AAGPC,oBAAY,IAHL;AAIPC,uBAAe;AAJR,KALf;AAAA,QAWIC,UAAU;AACNJ,uBAAeD,SAASC,aADlB;AAENC,oBAAYF,SAASE,UAFf;AAGNC,oBAAYH,SAASG,UAHf;AAINC,uBAAeJ,SAASI;AAJlB,KAXd;;AAmBA;;;;AAIA;AACA,aAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,aAAKC,MAAL,GAAcF,KAAd;;AAEA,aAAKG,MAAL,GAAcF,MAAd;AACH;;AAEDb,eAAU,iBAASY,KAAT,EAAgB;AACtB,YAAII,KAAJ,EACIC,IADJ,EAEIC,gBAFJ,EAGIC,MAHJ;;AAKA,YAAInB,SAAQoB,SAAR,CAAkBR,KAAlB,CAAJ,EAA8B;AAC1BI,oBAAQJ,MAAMI,KAAN,EAAR;AACH,SAFD,MAEO,IAAIJ,UAAU,CAAV,IAAe,OAAOA,KAAP,KAAiB,WAApC,EAAiD;AACpDI,oBAAQ,CAAR;AACH,SAFM,MAEA,IAAIJ,UAAU,IAAV,IAAkBX,EAAEoB,KAAF,CAAQT,KAAR,CAAtB,EAAsC;AACzCI,oBAAQ,IAAR;AACH,SAFM,MAEA,IAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AAClC,gBAAIF,QAAQH,UAAR,IAAsBK,UAAUF,QAAQH,UAA5C,EAAwD;AACpDS,wBAAQ,CAAR;AACH,aAFD,MAEO,IAAIN,QAAQF,UAAR,IAAsBI,UAAUF,QAAQF,UAAxC,IAAsD,CAACI,MAAMU,OAAN,CAAc,UAAd,EAA0B,EAA1B,EAA8BC,MAAzF,EAAiG;AACpGP,wBAAQ,IAAR;AACH,aAFM,MAEA;AACH,qBAAKC,IAAL,IAAad,OAAb,EAAsB;AAClBgB,6BAAS,OAAOhB,QAAQc,IAAR,EAAcO,OAAd,CAAsBC,QAA7B,KAA0C,UAA1C,GAAuDtB,QAAQc,IAAR,EAAcO,OAAd,CAAsBC,QAAtB,EAAvD,GAA0FtB,QAAQc,IAAR,EAAcO,OAAd,CAAsBC,QAAzH;;AAEA,wBAAIN,UAAUP,MAAMc,KAAN,CAAYP,MAAZ,CAAd,EAAmC;AAC/BD,2CAAmBf,QAAQc,IAAR,EAAcQ,QAAjC;;AAEA;AACH;AACJ;;AAEDP,mCAAmBA,oBAAoBlB,SAAQC,CAAR,CAAU0B,cAAjD;;AAEAX,wBAAQE,iBAAiBN,KAAjB,CAAR;AACH;AACJ,SApBM,MAoBA;AACHI,oBAAQY,OAAOhB,KAAP,KAAgB,IAAxB;AACH;;AAED,eAAO,IAAID,OAAJ,CAAYC,KAAZ,EAAmBI,KAAnB,CAAP;AACH,KArCD;;AAuCA;AACAhB,aAAQ6B,OAAR,GAAkB3B,OAAlB;;AAEA;AACAF,aAAQoB,SAAR,GAAoB,UAASU,GAAT,EAAc;AAC9B,eAAOA,eAAenB,OAAtB;AACH,KAFD;;AAIA;AACAX,aAAQC,CAAR,GAAYA,IAAI;AACZ;AACA8B,wBAAgB,wBAASf,KAAT,EAAgBgB,MAAhB,EAAwBC,gBAAxB,EAA0C;AACtD,gBAAIC,SAAS9B,QAAQJ,SAAQU,OAAR,CAAgBJ,aAAxB,CAAb;AAAA,gBACI6B,OAAO,KADX;AAAA,gBAEIC,SAAS,KAFb;AAAA,gBAGIC,SAAS,KAHb;AAAA,gBAIIC,OAAO,EAJX;AAAA,gBAKIC,WAAW,aALf;AAAA,gBAMIC,UAAU,UANd;AAAA,gBAOIC,UAAU,OAPd;AAAA,gBAQIC,WAAW,IARf;AAAA,gBASIC,SATJ;AAAA,gBASe;AACXC,eAVJ;AAAA,gBAWIC,GAXJ;AAAA,gBAYIC,GAZJ;AAAA,gBAaIC,KAbJ;AAAA,gBAcIC,GAdJ;AAAA,gBAeIC,SAfJ;AAAA,gBAgBIC,SAhBJ;AAAA,gBAiBIC,UAAU,EAjBd;AAAA,gBAkBIC,MAAM,KAlBV;;AAoBA;AACApC,oBAAQA,SAAS,CAAjB;;AAEA4B,kBAAMS,KAAKT,GAAL,CAAS5B,KAAT,CAAN;;AAEA;AACA;AACA,gBAAIhB,SAAQC,CAAR,CAAUqD,QAAV,CAAmBtB,MAAnB,EAA2B,GAA3B,CAAJ,EAAqC;AACjCG,uBAAO,IAAP;AACAH,yBAASA,OAAOuB,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT;AACH,aAHD,MAGO,IAAIvD,SAAQC,CAAR,CAAUqD,QAAV,CAAmBtB,MAAnB,EAA2B,GAA3B,CAAJ,EAAqC;AACxCI,yBAAS,IAAT;AACAJ,yBAASA,OAAOV,OAAP,CAAe,KAAf,EAAsB,EAAtB,CAAT;AACH;;AAED;AACA,gBAAItB,SAAQC,CAAR,CAAUqD,QAAV,CAAmBtB,MAAnB,EAA2B,GAA3B,CAAJ,EAAqC;AACjCW,4BAAYX,OAAON,KAAP,CAAa,aAAb,CAAZ;;AAEAiB,4BAAYA,YAAYA,UAAU,CAAV,CAAZ,GAA2B,KAAvC;;AAEA;AACA,oBAAI3C,SAAQC,CAAR,CAAUqD,QAAV,CAAmBtB,MAAnB,EAA2B,IAA3B,CAAJ,EAAsC;AAClCM,2BAAO,GAAP;AACH;;AAEDN,yBAASA,OAAOV,OAAP,CAAe,IAAIkC,MAAJ,CAAWlB,OAAO,UAAlB,CAAf,EAA8C,EAA9C,CAAT;;AAEA,oBAAIM,OAAOL,QAAP,IAAmB,CAACI,SAApB,IAAiCA,cAAc,GAAnD,EAAwD;AACpD;AACAL,4BAAQJ,OAAOuB,aAAP,CAAqBlB,QAA7B;AACAvB,4BAAQA,QAAQuB,QAAhB;AACH,iBAJD,MAIO,IAAIK,MAAML,QAAN,IAAkBK,OAAOJ,OAAzB,IAAoC,CAACG,SAArC,IAAkDA,cAAc,GAApE,EAAyE;AAC5E;AACAL,4BAAQJ,OAAOuB,aAAP,CAAqBjB,OAA7B;AACAxB,4BAAQA,QAAQwB,OAAhB;AACH,iBAJM,MAIA,IAAII,MAAMJ,OAAN,IAAiBI,OAAOH,OAAxB,IAAmC,CAACE,SAApC,IAAiDA,cAAc,GAAnE,EAAwE;AAC3E;AACAL,4BAAQJ,OAAOuB,aAAP,CAAqBhB,OAA7B;AACAzB,4BAAQA,QAAQyB,OAAhB;AACH,iBAJM,MAIA,IAAIG,MAAMH,OAAN,IAAiBG,OAAOF,QAAxB,IAAoC,CAACC,SAArC,IAAkDA,cAAc,GAApE,EAAyE;AAC5E;AACAL,4BAAQJ,OAAOuB,aAAP,CAAqBf,QAA7B;AACA1B,4BAAQA,QAAQ0B,QAAhB;AACH;AACJ;;AAGD,gBAAI1C,SAAQC,CAAR,CAAUqD,QAAV,CAAmBtB,MAAnB,EAA2B,KAA3B,CAAJ,EAAuC;AACnCK,yBAAS,IAAT;AACAL,yBAASA,OAAOV,OAAP,CAAe,KAAf,EAAsB,GAAtB,CAAT;AACH;;AAED0B,kBAAMhC,MAAM0C,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAN;AACAV,wBAAYjB,OAAO2B,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAZ;AACAT,wBAAYlB,OAAO4B,OAAP,CAAe,GAAf,CAAZ;;AAEA,gBAAIX,SAAJ,EAAe;AACX,oBAAIjD,SAAQC,CAAR,CAAUqD,QAAV,CAAmBL,SAAnB,EAA8B,GAA9B,CAAJ,EAAwC;AACpCA,gCAAYA,UAAU3B,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;AACA2B,gCAAYA,UAAUU,KAAV,CAAgB,GAAhB,CAAZ;AACAR,8BAAUnD,SAAQC,CAAR,CAAU4D,OAAV,CAAkB7C,KAAlB,EAA0BiC,UAAU,CAAV,EAAa1B,MAAb,GAAsB0B,UAAU,CAAV,EAAa1B,MAA7D,EAAsEU,gBAAtE,EAAwFgB,UAAU,CAAV,EAAa1B,MAArG,CAAV;AACH,iBAJD,MAIO;AACH4B,8BAAUnD,SAAQC,CAAR,CAAU4D,OAAV,CAAkB7C,KAAlB,EAAyBiC,UAAU1B,MAAnC,EAA2CU,gBAA3C,CAAV;AACH;;AAEDe,sBAAMG,QAAQQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAN;;AAEA,oBAAI3D,SAAQC,CAAR,CAAUqD,QAAV,CAAmBH,OAAnB,EAA4B,GAA5B,CAAJ,EAAsC;AAClCA,8BAAUjB,OAAO4B,UAAP,CAAkBX,OAAlB,GAA4BA,QAAQQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAtC;AACH,iBAFD,MAEO;AACHR,8BAAU,EAAV;AACH;;AAED,oBAAId,UAAUT,OAAOuB,QAAQI,KAAR,CAAc,CAAd,CAAP,MAA6B,CAA3C,EAA8C;AAC1CJ,8BAAU,EAAV;AACH;AACJ,aApBD,MAoBO;AACHH,sBAAMhD,SAAQC,CAAR,CAAU4D,OAAV,CAAkB7C,KAAlB,EAAyB,IAAzB,EAA+BiB,gBAA/B,CAAN;AACH;;AAED;AACA,gBAAIjC,SAAQC,CAAR,CAAUqD,QAAV,CAAmBN,GAAnB,EAAwB,GAAxB,CAAJ,EAAkC;AAC9BA,sBAAMA,IAAIO,KAAJ,CAAU,CAAV,CAAN;AACAH,sBAAM,IAAN;AACH;;AAED,gBAAIF,YAAY,CAAC,CAAjB,EAAoB;AAChBF,sBAAMA,IAAIU,QAAJ,GAAepC,OAAf,CAAuB,yBAAvB,EAAkD,OAAOY,OAAO4B,UAAP,CAAkBZ,SAA3E,CAAN;AACH;;AAED,gBAAIlB,OAAO4B,OAAP,CAAe,GAAf,MAAwB,CAA5B,EAA+B;AAC3BZ,sBAAM,EAAN;AACH;;AAED,mBAAO,CAACb,QAAQiB,GAAR,GAAc,GAAd,GAAoB,EAArB,KAA4B,CAACjB,IAAD,IAASiB,GAAT,GAAe,GAAf,GAAqB,EAAjD,KAAwD,CAACA,GAAD,IAAQhB,MAAR,GAAiB,GAAjB,GAAuB,EAA/E,IAAqFY,GAArF,GAA2FG,OAA3F,IAAsGb,OAAOA,IAAP,GAAc,EAApH,KAA2HH,QAAQiB,GAAR,GAAc,GAAd,GAAoB,EAA/I,CAAP;AACH,SAvHW;AAwHZ;AACAzB,wBAAgB,wBAASoC,MAAT,EAAiB;AAC7B,gBAAI7B,SAAS9B,QAAQM,QAAQJ,aAAhB,CAAb;AAAA,gBACI0D,iBAAiBD,MADrB;AAAA,gBAEIN,gBAAgB;AACZf,0BAAU,CADE;AAEZD,yBAAS,CAFG;AAGZD,yBAAS,CAHG;AAIZD,0BAAU;AAJE,aAFpB;AAAA,gBAQI0B,YARJ;AAAA,gBASIjD,KATJ;AAAA,gBAUIkD,CAVJ;AAAA,gBAWI/C,MAXJ;;AAaA,gBAAIT,QAAQH,UAAR,IAAsBwD,WAAWrD,QAAQH,UAA7C,EAAyD;AACrDS,wBAAQ,CAAR;AACH,aAFD,MAEO,IAAIN,QAAQF,UAAR,IAAsBuD,WAAWrD,QAAQF,UAAzC,IAAuD,CAACuD,OAAOzC,OAAP,CAAe,UAAf,EAA2B,EAA3B,EAA+BC,MAA3F,EAAmG;AACtGP,wBAAQ,IAAR;AACH,aAFM,MAEA;AACHA,wBAAQ,CAAR;;AAEA,oBAAIkB,OAAO4B,UAAP,CAAkBX,OAAlB,KAA8B,GAAlC,EAAuC;AACnCY,6BAASA,OAAOzC,OAAP,CAAe,KAAf,EAAsB,EAAtB,EAA0BA,OAA1B,CAAkCY,OAAO4B,UAAP,CAAkBX,OAApD,EAA6D,GAA7D,CAAT;AACH;;AAED,qBAAKc,YAAL,IAAqBR,aAArB,EAAoC;AAChCtC,6BAAS,IAAIqC,MAAJ,CAAW,cAActB,OAAOuB,aAAP,CAAqBQ,YAArB,CAAd,GAAmD,YAAnD,GAAkE/B,OAAOiC,QAAP,CAAgBC,MAAlF,GAA2F,eAAtG,CAAT;;AAEA,wBAAIJ,eAAetC,KAAf,CAAqBP,MAArB,CAAJ,EAAkC;AAC9BH,iCAASqC,KAAKgB,GAAL,CAAS,EAAT,EAAaZ,cAAcQ,YAAd,CAAb,CAAT;AACA;AACH;AACJ;;AAED;AACAjD,yBAAS,CAAC+C,OAAOJ,KAAP,CAAa,GAAb,EAAkBpC,MAAlB,GAA2B8B,KAAKR,GAAL,CAASkB,OAAOJ,KAAP,CAAa,GAAb,EAAkBpC,MAAlB,GAA2B,CAApC,EAAuCwC,OAAOJ,KAAP,CAAa,GAAb,EAAkBpC,MAAlB,GAA2B,CAAlE,CAA5B,IAAoG,CAApG,GAAwG,CAAxG,GAA4G,CAAC,CAAtH;;AAEA;AACAwC,yBAASA,OAAOzC,OAAP,CAAe,YAAf,EAA6B,EAA7B,CAAT;;AAEAN,yBAASY,OAAOmC,MAAP,CAAT;AACH;;AAED,mBAAO/C,KAAP;AACH,SArKW;AAsKZK;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAAO,UAASL,KAAT,EAAgB;AACnB,mBAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BK,MAAML,KAAN,CAApC;AACH,SAFD,CAtKY;AAyKZsC,kBAAU,kBAASS,MAAT,EAAiBO,MAAjB,EAAyB;AAC/B,mBAAOP,OAAOH,OAAP,CAAeU,MAAf,MAA2B,CAAC,CAAnC;AACH,SA3KW;AA4KZC,gBAAQ,gBAASC,KAAT,EAAgBC,QAAhB,CAAyB,kBAAzB,EAA6C;AACjD,gBAAI,SAAS,IAAb,EAAmB;AACf,sBAAM,IAAIC,SAAJ,CAAc,oDAAd,CAAN;AACH;;AAED,gBAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC,sBAAM,IAAIC,SAAJ,CAAcD,WAAW,oBAAzB,CAAN;AACH;;AAED,gBAAIE,IAAIC,OAAOJ,KAAP,CAAR;AAAA,gBACIK,MAAMF,EAAEpD,MAAF,KAAa,CADvB;AAAA,gBAEIuD,IAAI,CAFR;AAAA,gBAGI9D,KAHJ;;AAKA,gBAAI+D,UAAUxD,MAAV,KAAqB,CAAzB,EAA4B;AACxBP,wBAAQ+D,UAAU,CAAV,CAAR;AACH,aAFD,MAEO;AACH,uBAAOD,IAAID,GAAJ,IAAW,EAAEC,KAAKH,CAAP,CAAlB,EAA6B;AACzBG;AACH;;AAED,oBAAIA,KAAKD,GAAT,EAAc;AACV,0BAAM,IAAIH,SAAJ,CAAc,6CAAd,CAAN;AACH;;AAED1D,wBAAQ2D,EAAEG,GAAF,CAAR;AACH;AACD,mBAAOA,IAAID,GAAX,EAAgBC,GAAhB,EAAqB;AACjB,oBAAIA,KAAKH,CAAT,EAAY;AACR3D,4BAAQyD,SAASzD,KAAT,EAAgB2D,EAAEG,CAAF,CAAhB,EAAsBA,CAAtB,EAAyBH,CAAzB,CAAR;AACH;AACJ;AACD,mBAAO3D,KAAP;AACH,SA7MW;AA8MZ;;;;;AAKAgE,oBAAY,oBAAUC,CAAV,EAAa;AACrB,gBAAIC,QAAQD,EAAEvB,QAAF,GAAaC,KAAb,CAAmB,GAAnB,CAAZ;;AAEA,mBAAOuB,MAAM3D,MAAN,GAAe,CAAf,GAAmB,CAAnB,GAAuB8B,KAAKgB,GAAL,CAAS,EAAT,EAAaa,MAAM,CAAN,EAAS3D,MAAtB,CAA9B;AACH,SAvNW;AAwNZ;;;;;AAKA4D,0BAAkB,4BAAY;AAC1B,gBAAIC,OAAOC,MAAMC,SAAN,CAAgB/B,KAAhB,CAAsBgC,IAAtB,CAA2BR,SAA3B,CAAX;;AAEA,mBAAOK,KAAKb,MAAL,CAAY,UAASiB,KAAT,EAAgBC,IAAhB,EAAsB;AACrC,oBAAIC,KAAKzF,EAAE+E,UAAF,CAAaS,IAAb,CAAT;AACA,uBAAOD,QAAQE,EAAR,GAAaF,KAAb,GAAqBE,EAA5B;AACH,aAHM,EAGJ,CAHI,CAAP;AAIH,SApOW;AAqOZ;;;;;;AAMA7B,iBAAS,iBAAS7C,KAAT,EAAgB2E,WAAhB,EAA6B1D,gBAA7B,EAA+C2D,SAA/C,EAA0D;AAC/D,gBAAIC,aAAa7E,MAAM0C,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAjB;AAAA,gBACImC,cAAcH,eAAeC,aAAa,CAA5B,CADlB;AAAA,gBAEIG,gBAFJ;AAAA,gBAGIC,eAHJ;AAAA,gBAIIjD,KAJJ;AAAA,gBAKIkD,MALJ;;AAOA;AACA,gBAAIJ,WAAWtE,MAAX,KAAsB,CAA1B,EAA6B;AAC3BwE,mCAAmB1C,KAAKR,GAAL,CAASQ,KAAKP,GAAL,CAAS+C,WAAW,CAAX,EAActE,MAAvB,EAA+BuE,WAA/B,CAAT,EAAsDH,WAAtD,CAAnB;AACD,aAFD,MAEO;AACLI,mCAAmBD,WAAnB;AACD;;AAED/C,oBAAQM,KAAKgB,GAAL,CAAS,EAAT,EAAa0B,gBAAb,CAAR;;AAEA;AACA;AACAE,qBAAS,CAAChE,iBAAiBjB,QAAQ+B,KAAzB,IAAkCA,KAAnC,EAA0Cc,OAA1C,CAAkDkC,gBAAlD,CAAT;;AAEA,gBAAIH,YAAYD,cAAcI,gBAA9B,EAAgD;AAC5CC,kCAAkB,IAAIxC,MAAJ,CAAW,cAAcoC,aAAaD,cAAcI,gBAA3B,CAAd,IAA8D,IAAzE,CAAlB;AACAE,yBAASA,OAAO3E,OAAP,CAAe0E,eAAf,EAAgC,EAAhC,CAAT;AACH;;AAED,mBAAOC,MAAP;AACH;AAtQW,KAAhB;;AAyQA;AACAjG,aAAQU,OAAR,GAAkBA,OAAlB;;AAEA;AACAV,aAAQG,OAAR,GAAkBA,OAAlB;;AAEA;AACAH,aAAQI,OAAR,GAAkBA,OAAlB;;AAEA;AACA;AACA;AACAJ,aAAQkC,MAAR,GAAiB,UAASgE,GAAT,EAAc;AAC3B,YAAI,CAACA,GAAL,EAAU;AACN,mBAAOxF,QAAQJ,aAAf;AACH;;AAEDI,gBAAQJ,aAAR,GAAwB4F,IAAIC,WAAJ,EAAxB;;AAEA,eAAOnG,QAAP;AACH,KARD;;AAUA;AACA;AACA;AACAA,aAAQoG,UAAR,GAAqB,UAASF,GAAT,EAAc;AAC/B,YAAI,CAACA,GAAL,EAAU;AACN,mBAAO9F,QAAQM,QAAQJ,aAAhB,CAAP;AACH;;AAED4F,cAAMA,IAAIC,WAAJ,EAAN;;AAEA,YAAI,CAAC/F,QAAQ8F,GAAR,CAAL,EAAmB;AACf,kBAAM,IAAIG,KAAJ,CAAU,sBAAsBH,GAAhC,CAAN;AACH;;AAED,eAAO9F,QAAQ8F,GAAR,CAAP;AACH,KAZD;;AAcAlG,aAAQsG,KAAR,GAAgB,YAAW;AACvB,aAAK,IAAIC,QAAT,IAAqBlG,QAArB,EAA+B;AAC3BK,oBAAQ6F,QAAR,IAAoBlG,SAASkG,QAAT,CAApB;AACH;AACJ,KAJD;;AAMAvG,aAAQO,UAAR,GAAqB,UAASyB,MAAT,EAAiB;AAClCtB,gBAAQH,UAAR,GAAqB,OAAOyB,MAAP,KAAmB,QAAnB,GAA8BA,MAA9B,GAAuC,IAA5D;AACH,KAFD;;AAIAhC,aAAQQ,UAAR,GAAqB,UAAUwB,MAAV,EAAkB;AACnCtB,gBAAQF,UAAR,GAAqB,OAAOwB,MAAP,KAAmB,QAAnB,GAA8BA,MAA9B,GAAuC,IAA5D;AACH,KAFD;;AAIAhC,aAAQS,aAAR,GAAwB,UAASuB,MAAT,EAAiB;AACrCtB,gBAAQD,aAAR,GAAwB,OAAOuB,MAAP,KAAmB,QAAnB,GAA8BA,MAA9B,GAAuC,KAA/D;AACH,KAFD;;AAIAhC,aAAQwG,QAAR,GAAmB,UAASC,IAAT,EAAeC,IAAf,EAAqB1E,MAArB,EAA6B;AAC5C0E,eAAOA,KAAKP,WAAL,EAAP;;AAEA,YAAI,KAAKM,OAAO,GAAZ,EAAiBC,IAAjB,CAAJ,EAA4B;AACxB,kBAAM,IAAIhC,SAAJ,CAAcgC,OAAO,GAAP,GAAaD,IAAb,GAAoB,sBAAlC,CAAN;AACH;;AAED,aAAKA,OAAO,GAAZ,EAAiBC,IAAjB,IAAyB1E,MAAzB;AACH,KARD;;AAWAhC,aAAQ2G,QAAR,GAAmB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACtC,YAAIC,WAAJ,EACIC,YADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,QAJJ,EAKIC,cALJ,EAMIf,UANJ,EAOIgB,IAPJ;;AASA;AACA,YAAI,OAAOR,GAAP,KAAe,QAAnB,EAA6B;AACzBA,mBAAO,EAAP;;AAEA,gBAAIS,QAAQC,IAAZ,EAAkB;AACdD,wBAAQC,IAAR,CAAa,4DAAb,EAA2EV,GAA3E;AACH;AACJ;;AAED;AACAA,cAAMA,IAAIW,IAAJ,EAAN;;AAEA;AACA,YAAI,CAAC,CAACX,IAAIlF,KAAJ,CAAU,OAAV,CAAN,EAA0B;AACtB,mBAAO,IAAP;AACH;;AAED;AACA,YAAIkF,QAAQ,EAAZ,EAAgB;AACZ,mBAAO,KAAP;AACH;;AAED;AACA,YAAI;AACA;AACAR,yBAAapG,SAAQoG,UAAR,CAAmBS,OAAnB,CAAb;AACH,SAHD,CAGE,OAAOW,CAAP,EAAU;AACRpB,yBAAapG,SAAQoG,UAAR,CAAmBpG,SAAQkC,MAAR,EAAnB,CAAb;AACH;;AAED;AACA8E,sBAAcZ,WAAWjC,QAAX,CAAoBC,MAAlC;AACA8C,mBAAWd,WAAW3C,aAAtB;AACAqD,sBAAcV,WAAWtC,UAAX,CAAsBX,OAApC;AACA,YAAIiD,WAAWtC,UAAX,CAAsBZ,SAAtB,KAAoC,GAAxC,EAA6C;AACzC6D,2BAAe,KAAf;AACH,SAFD,MAEO;AACHA,2BAAeX,WAAWtC,UAAX,CAAsBZ,SAArC;AACH;;AAED;AACAkE,eAAOR,IAAIlF,KAAJ,CAAU,SAAV,CAAP;AACA,YAAI0F,SAAS,IAAb,EAAmB;AACfR,kBAAMA,IAAIa,MAAJ,CAAW,CAAX,CAAN;AACA,gBAAIL,KAAK,CAAL,MAAYJ,WAAhB,EAA6B;AACzB,uBAAO,KAAP;AACH;AACJ;;AAED;AACAI,eAAOR,IAAIlF,KAAJ,CAAU,SAAV,CAAP;AACA,YAAI0F,SAAS,IAAb,EAAmB;AACfR,kBAAMA,IAAIrD,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACA,gBAAI6D,KAAK,CAAL,MAAYF,SAASxE,QAArB,IAAiC0E,KAAK,CAAL,MAAYF,SAASzE,OAAtD,IAAiE2E,KAAK,CAAL,MAAYF,SAAS1E,OAAtF,IAAiG4E,KAAK,CAAL,MAAYF,SAAS3E,QAA1H,EAAoI;AAChI,uBAAO,KAAP;AACH;AACJ;;AAED4E,yBAAiB,IAAI3D,MAAJ,CAAWuD,eAAe,KAA1B,CAAjB;;AAEA,YAAI,CAACH,IAAIlF,KAAJ,CAAU,UAAV,CAAL,EAA4B;AACxBuF,wBAAYL,IAAIjD,KAAJ,CAAUmD,WAAV,CAAZ;AACA,gBAAIG,UAAU1F,MAAV,GAAmB,CAAvB,EAA0B;AACtB,uBAAO,KAAP;AACH,aAFD,MAEO;AACH,oBAAI0F,UAAU1F,MAAV,GAAmB,CAAvB,EAA0B;AACtB,2BAAS,CAAC,CAAE0F,UAAU,CAAV,EAAavF,KAAb,CAAmB,WAAnB,CAAH,IAAsC,CAACuF,UAAU,CAAV,EAAavF,KAAb,CAAmByF,cAAnB,CAAhD;AACH,iBAFD,MAEO;AACH,wBAAIF,UAAU,CAAV,EAAa1F,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,+BAAS,CAAC,CAAE0F,UAAU,CAAV,EAAavF,KAAb,CAAmB,OAAnB,CAAH,IAAkC,CAACuF,UAAU,CAAV,EAAavF,KAAb,CAAmByF,cAAnB,CAAnC,IAAyE,CAAC,CAAEF,UAAU,CAAV,EAAavF,KAAb,CAAmB,OAAnB,CAArF;AACH,qBAFD,MAEO;AACH,+BAAS,CAAC,CAAEuF,UAAU,CAAV,EAAavF,KAAb,CAAmB,WAAnB,CAAH,IAAsC,CAACuF,UAAU,CAAV,EAAavF,KAAb,CAAmByF,cAAnB,CAAvC,IAA6E,CAAC,CAAEF,UAAU,CAAV,EAAavF,KAAb,CAAmB,OAAnB,CAAzF;AACH;AACJ;AACJ;AACJ;;AAED,eAAO,KAAP;AACH,KAxFD;;AA2FA;;;;AAIA1B,aAAQ0H,EAAR,GAAa/G,QAAQ2E,SAAR,GAAoB;AAC7BqC,eAAO,iBAAW;AACd,mBAAO3H,SAAQ,IAAR,CAAP;AACH,SAH4B;AAI7BgC,gBAAQ,gBAAS4F,WAAT,EAAsB3F,gBAAtB,EAAwC;AAC5C,gBAAIjB,QAAQ,KAAKD,MAAjB;AAAA,gBACIiB,SAAS4F,eAAelH,QAAQD,aADpC;AAAA,gBAEIQ,IAFJ;AAAA,gBAGIgF,MAHJ;AAAA,gBAII4B,cAJJ;;AAMA;AACA5F,+BAAmBA,oBAAoBoB,KAAKyE,KAA5C;;AAEA;AACA,gBAAI9G,UAAU,CAAV,IAAeN,QAAQH,UAAR,KAAuB,IAA1C,EAAgD;AAC5C0F,yBAASvF,QAAQH,UAAjB;AACH,aAFD,MAEO,IAAIS,UAAU,IAAV,IAAkBN,QAAQF,UAAR,KAAuB,IAA7C,EAAmD;AACtDyF,yBAASvF,QAAQF,UAAjB;AACH,aAFM,MAEA;AACH,qBAAKS,IAAL,IAAad,OAAb,EAAsB;AAClB,wBAAI6B,OAAON,KAAP,CAAavB,QAAQc,IAAR,EAAcO,OAAd,CAAsBQ,MAAnC,CAAJ,EAAgD;AAC5C6F,yCAAiB1H,QAAQc,IAAR,EAAce,MAA/B;;AAEA;AACH;AACJ;;AAED6F,iCAAiBA,kBAAkB7H,SAAQC,CAAR,CAAU8B,cAA7C;;AAEAkE,yBAAS4B,eAAe7G,KAAf,EAAsBgB,MAAtB,EAA8BC,gBAA9B,CAAT;AACH;;AAED,mBAAOgE,MAAP;AACH,SAlC4B;AAmC7BjF,eAAO,iBAAW;AACd,mBAAO,KAAKD,MAAZ;AACH,SArC4B;AAsC7BH,eAAO,iBAAW;AACd,mBAAO,KAAKE,MAAZ;AACH,SAxC4B;AAyC7BiH,aAAK,aAAS/G,KAAT,EAAgB;AACjB,iBAAKD,MAAL,GAAca,OAAOZ,KAAP,CAAd;;AAEA,mBAAO,IAAP;AACH,SA7C4B;AA8C7BgH,aAAK,aAAShH,KAAT,EAAgB;AACjB,gBAAIiH,aAAahI,EAAEkF,gBAAF,CAAmBI,IAAnB,CAAwB,IAAxB,EAA8B,KAAKxE,MAAnC,EAA2CC,KAA3C,CAAjB;;AAEA,qBAASkH,KAAT,CAAe1C,KAAf,EAAsB2C,IAAtB,EAA4BC,KAA5B,EAAmCC,CAAnC,EAAsC;AAClC,uBAAO7C,QAAQnC,KAAKyE,KAAL,CAAWG,aAAaE,IAAxB,CAAf;AACH;;AAED,iBAAKpH,MAAL,GAAcd,EAAEsE,MAAF,CAAS,CAAC,KAAKxD,MAAN,EAAcC,KAAd,CAAT,EAA+BkH,KAA/B,EAAsC,CAAtC,IAA2CD,UAAzD;;AAEA,mBAAO,IAAP;AACH,SAxD4B;AAyD7BK,kBAAU,kBAAStH,KAAT,EAAgB;AACtB,gBAAIiH,aAAahI,EAAEkF,gBAAF,CAAmBI,IAAnB,CAAwB,IAAxB,EAA8B,KAAKxE,MAAnC,EAA2CC,KAA3C,CAAjB;;AAEA,qBAASkH,KAAT,CAAe1C,KAAf,EAAsB2C,IAAtB,EAA4BC,KAA5B,EAAmCC,CAAnC,EAAsC;AAClC,uBAAO7C,QAAQnC,KAAKyE,KAAL,CAAWG,aAAaE,IAAxB,CAAf;AACH;;AAED,iBAAKpH,MAAL,GAAcd,EAAEsE,MAAF,CAAS,CAACvD,KAAD,CAAT,EAAkBkH,KAAlB,EAAyB7E,KAAKyE,KAAL,CAAW,KAAK/G,MAAL,GAAckH,UAAzB,CAAzB,IAAiEA,UAA/E;;AAEA,mBAAO,IAAP;AACH,SAnE4B;AAoE7BM,kBAAU,kBAASvH,KAAT,EAAgB;AACtB,qBAASkH,KAAT,CAAe1C,KAAf,EAAsB2C,IAAtB,EAA4BC,KAA5B,EAAmCC,CAAnC,EAAsC;AAClC,oBAAIJ,aAAahI,EAAEkF,gBAAF,CAAmBK,KAAnB,EAA0B2C,IAA1B,CAAjB;AACA,uBAAO9E,KAAKyE,KAAL,CAAWtC,QAAQyC,UAAnB,IAAiC5E,KAAKyE,KAAL,CAAWK,OAAOF,UAAlB,CAAjC,GAAiE5E,KAAKyE,KAAL,CAAWG,aAAaA,UAAxB,CAAxE;AACH;;AAED,iBAAKlH,MAAL,GAAcd,EAAEsE,MAAF,CAAS,CAAC,KAAKxD,MAAN,EAAcC,KAAd,CAAT,EAA+BkH,KAA/B,EAAsC,CAAtC,CAAd;;AAEA,mBAAO,IAAP;AACH,SA7E4B;AA8E7BM,gBAAQ,gBAASxH,KAAT,EAAgB;AACpB,qBAASkH,KAAT,CAAe1C,KAAf,EAAsB2C,IAAtB,EAA4BC,KAA5B,EAAmCC,CAAnC,EAAsC;AAClC,oBAAIJ,aAAahI,EAAEkF,gBAAF,CAAmBK,KAAnB,EAA0B2C,IAA1B,CAAjB;AACA,uBAAO9E,KAAKyE,KAAL,CAAWtC,QAAQyC,UAAnB,IAAiC5E,KAAKyE,KAAL,CAAWK,OAAOF,UAAlB,CAAxC;AACH;;AAED,iBAAKlH,MAAL,GAAcd,EAAEsE,MAAF,CAAS,CAAC,KAAKxD,MAAN,EAAcC,KAAd,CAAT,EAA+BkH,KAA/B,CAAd;;AAEA,mBAAO,IAAP;AACH,SAvF4B;AAwF7BO,oBAAY,oBAASzH,KAAT,EAAgB;AACxB,mBAAOqC,KAAKT,GAAL,CAAS5C,SAAQ,KAAKe,MAAb,EAAqBuH,QAArB,CAA8BtH,KAA9B,EAAqCA,KAArC,EAAT,CAAP;AACH;AA1F4B,KAAjC;;AA6FA;;;;AAIAhB,aAAQwG,QAAR,CAAiB,QAAjB,EAA2B,IAA3B,EAAiC;AAC7B1C,oBAAY;AACRZ,uBAAW,GADH;AAERC,qBAAS;AAFD,SADiB;AAK7BM,uBAAe;AACXf,sBAAU,GADC;AAEXD,qBAAS,GAFE;AAGXD,qBAAS,GAHE;AAIXD,sBAAU;AAJC,SALc;AAW7BmG,iBAAS,iBAAS7H,MAAT,EAAiB;AACtB,gBAAI8H,IAAI9H,SAAS,EAAjB;AACA,mBAAQ,CAAC,EAAEA,SAAS,GAAT,GAAe,EAAjB,CAAD,KAA0B,CAA3B,GAAgC,IAAhC,GACF8H,MAAM,CAAP,GAAY,IAAZ,GACCA,MAAM,CAAP,GAAY,IAAZ,GACCA,MAAM,CAAP,GAAY,IAAZ,GAAmB,IAHvB;AAIH,SAjB4B;AAkB7BxE,kBAAU;AACNC,oBAAQ;AADF;AAlBmB,KAAjC;;AAwBA;;;;AAIA;AACA,QAAI,OAAOwE,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,OAA5C,EAAqD;AACjDD,eAAOC,OAAP,GAAiB7I,QAAjB;AACH;;AAED;AACA,QAAI,OAAO8I,KAAP,KAAiB,WAArB,EAAkC;AAC9B;AACA;AACA;AACA,aAAK,SAAL,IAAkB9I,QAAlB;AACH;;AAED;AACA,QAAI,OAAO+I,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAA3C,EAAgD;AAC5CD,eAAO,EAAP,EAAW,YAAW;AAClB,mBAAO/I,QAAP;AACH,SAFD;AAGH;AACJ,CA/oBD,EA+oBGuF,IA/oBH","file":"numeral.js","sourcesContent":["/*! @preserve\n * numeral.js\n * version : 2.0.1\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function() {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.1',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0'\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                signed = false,\n                optDec = false,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                thousands,\n                decimal = '',\n                neg = false;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.slice(1, -1);\n            } else if (numeral._.includes(format, '+')) {\n                signed = true;\n                format = format.replace(/\\+/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, null, roundingFunction);\n            }\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            return (negP && neg ? '(' : '') + (!negP && neg ? '-' : '') + (!neg && signed ? '+' : '') + int + decimal + (abbr ? abbr : '') + (negP && neg ? ')' : '');\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value * power) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (!key) {\n            return options.currentLocale;\n        }\n\n        options.currentLocale = key.toLowerCase();\n\n        return numeral;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n\n    /************************************\n        Exposing Numeral\n    ************************************/\n\n    // CommonJS module is defined\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = numeral;\n    }\n\n    /*global ender:false */\n    if (typeof ender === 'undefined') {\n        // here, `this` means `window` in the browser, or `global` on the server\n        // add `numeral` as a global object via a string identifier,\n        // for Closure Compiler 'advanced' mode\n        this['numeral'] = numeral;\n    }\n\n    /*global define:false */\n    if (typeof define === 'function' && define.amd) {\n        define([], function() {\n            return numeral;\n        });\n    }\n}).call(this);\n"]}